// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  userId Int @id @default(autoincrement())
  username String @db.VarChar(65)
  name String @db.VarChar(65)
  email String @db.VarChar(255) @unique
  password String @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts Post[] @relation("user_posts")
  comments Comment[] @relation("user_comments")
}

model Post {
  postId Int @id @default(autoincrement())
  title String @db.VarChar(255)
  slug String @db.VarChar(285)
  body String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId Int

  user User @relation("user_posts", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)

  comments Comment[] @relation("post_comments")
}

model Comment {
  commentId Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  postId Int

  user User @relation("user_comments", fields: [userId], references: [userId], onUpdate: Cascade, onDelete: Cascade)
  post Post @relation("post_comments", fields: [postId], references: [postId], onUpdate: Cascade, onDelete: Cascade)
}